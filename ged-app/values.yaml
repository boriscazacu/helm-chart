# -- Provide a name in place of `ged-app`
nameOverride: ""

# -- String to fully override `"ged-app.fullname"`
fullnameOverride: ""

image:
  # -- image repository
  repositoryImage: <IMAGE_REPOSITORY>
  # -- image pull policy
  pullPolicy: Always
  # -- Overrides the image tag
  tag: "<IMAGE_TAG>"

  command: []

  args: []

initContainers: []

# -- If defined, uses a Secret to pull an image from a private Docker registry or repository.
imagePullSecrets: []

# -- Annotations to be added to the pods
podAnnotations: {}

# -- pod-level security context
podSecurityContext: {}
# fsGroup: 2000

# -- Number of replicas
replicaCount: 2

strategy:
  enabled: false
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

# -- The number of old ReplicaSets to retain
revisionHistoryLimit: 10

# -- Resource limits and requests for the controller pods.
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 70m
    memory: 1Gi
  limits:
    cpu: 100m
    memory: 2Gi

livenessProbe: {}

readinessProbe: {}

# -- container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

kind: Deployment

# -- Schedule
cronjob:
  enabled: false
  restartPolicy: Never

service:
  enabled: true
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes port where service is exposed
  port: 80
  # -- Annotations to add to the service account
  annotations: {}

metrics:
  enabled: false
  prometheusPath: /management/prometheus

ingress:
  # -- Enable ingress record generation
  enabled: false
  # -- IngressClass that will be be used to implement the Ingress
  className: ""
  # -- Additional annotations for the Ingress resource
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
    cert-manager.io/cluster-issuer: letsencrypt
    # cert-manager.io/cluster-issuer: cluster-issuer-name
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: chart-example.local
  ## @param ingress.pathType Ingress path type
  ##
  pathType: Prefix
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: sonarqube.local
  ##     path: /
  ##
  extraHosts: [ ]
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   pathType: Prefix
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: [ ]
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - sonarqube.local
  ##   secretName: sonarqube.local-tls
  ##
  extraTls: [ ]

autoscaling:
  # -- Enable Horizontal POD autoscaling
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 2
  # -- Maximum number of replicas
  maxReplicas: 3
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 90
  # -- Target Memory utilization percentage
  targetMemoryUtilizationPercentage: 90

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}

# -- additional environment variables to be added to the pods
extraEnv: {}

## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
##
extraEnvVarsCM: ""

## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
##
extraEnvVarsSecret: ""


## Container ports
## @param containerPorts.http WordPress HTTP container port
## @param containerPorts.https WordPress HTTPS container port
##
containerPorts:
  http: 8080
  https: ""

persistence:
  # -- use a PVC to persist data
  enabled: false
  # -- the desired access modes the volume should have.
  accessModes:
    - ReadWriteOnce
  # -- Annotations to be added to the PersistentVolumeClaim
  annotations: {}
  # -- provide an existing PersistentVolumeClaim
  existingClaim: ""
  # -- Name of the StorageClass required by the claim.
  storageClassName: ""
  # -- represents the minimum and maximum resources the volume should have.
  resources: {}
  backup:
    enabled: false
    claimName: ""
    existingClaim: ""
  # The claim names for app
  claimName: ""

  mountPath: ""

  configMap: # Optional
    enabled: false
    # Where the config map should be mounted inside your container's filesystem.
    mountPath: /config/ged-app-config
    fileName: config.yaml
    # Everything under content is copied verbatim into your service's configmap.
    content:
      key1: value1
      key2: value2
